<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper    
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"    
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace(名称空间):名称冲突
名称空间：文件所在的包名来命名
id：作为标识，执行那个操作，xml解析的步骤，
#{}:放入参数，参数名可以随便取的
parameterType:参数类型，简单类型：int,boolean,float...
复杂类型：全类名 java.lang.String
 -->
<mapper namespace="entity.User">
<select id="findById" parameterType="int" resultType="entity.User" >
select * from users where id=#{id}
</select>
<!-- 根据用户名称模糊查询用户信息，可能返回多条
resultType：指定就是单条记录所映射的java对象 类型
${}:表示拼接sql串，将接收到参数的内容不加任何修饰拼接在sql中。
使用${}拼接sql，引起 sql注入
${value}：接收输入 参数的内容，如果传入类型是简单类型，
${}中只能使用value,一般排序是使用这种写法 order by ${value}
-->
<select id="findByName" parameterType="java.lang.String" resultType="entity.User">
select * from users where  name like '%${value}%';
</select>
</mapper>